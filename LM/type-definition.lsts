
# TGround needs to be the first type (tag 0) or else sorted unification will not work right
type Type implies MustRetain, MustRelease zero TAny
        = TGround { tag:String, parameters:Vector<Type> }
        | TAny	
        | TVar { name:String }
        | TAnd { conjugate:Vector<Type> };

# TODO Remove: the problem is that OwnedData<Type> is somehow not reified
# fixing this bug in the V2 compiler is lower priority though than migrating to V3
let todo-remove(tt: Type): Nil = (
   mk-owned-data(type(Type),0); ()
);

let .release(x: Type): Nil = (
   print("Type Release Start\n");
   if mem-is-non-zero(x) { match x { 
      TAny{} => ();
      TGround{tag=tag,parameters=parameters} => (tag.release; parameters.release);
      TVar{name=name} => name.release;
      TAnd{conjugate=conjugate} => conjugate.release;
   }};
   print("Type Release End\n");
   mark-as-released(x);
);

let .retain(x: Type): Type = (
   print("Type Retain Start\n");
   if mem-is-non-zero(x) { match x { 
      TAny{} => ();
      TGround{tag=tag,parameters=parameters} => (tag.retain as MustNotRelease; parameters.retain as MustNotRelase; ());
      TVar{name=name} => (name.retain as MustNotRelease; ());
      TAnd{conjugate=conjugate} => (conjugate.retain as MustNotRelease; ());
   }};
   print("Type Retain End\n");
   x
);

