
import std/minimal.lsts;

let v = mk-vector(type(String), 4);

let ai = 0_u64;
while ai < 128 {
   v = v.push(ai.into(type(String)));
   ai = ai + 1;
};

assert(v.length == 128);
let last-cap = v.capacity;

ai = 0_u64;
while ai < v.length {
   let x = v[ai];
   assert(x == ai.into(type(String)));
   ai = ai + 1;
};

ai = 0_u64;
while ai < 100 {
   v = v.pop().first;
   ai = ai + 1;
};

# should have shrunk from the pop() s
assert(v.capacity < last-cap);
last-cap = v.capacity;

ai = 0_u64;
while ai < v.length {
   let x = v[ai];
   assert(x == ai.into(type(String)));
   ai = ai + 1;
};

