
import std/default.lsts;

let li = [1_u64, 2_u64, 2_u64, 3_u64, 4_u64, 5_u64] : List<U64>;
assert( li == [1_u64, 2_u64, 2_u64, 3_u64, 4_u64, 5_u64] );
assert( li.into(type(String)) == "[1,2,2,3,4,5]" );
assert( li.nth(0).get-or(100) == 1 );
assert( li.nth(1).get-or(100) == 2 );
assert( li.nth(2).get-or(100) == 2 );
assert( li.nth(3).get-or(100) == 3 );
assert( li.nth(4).get-or(100) == 4 );
assert( li.nth(5).get-or(100) == 5 );
assert( li.nth(6).get-or(100) == 100 );
assert( li.nth(7).get-or(100) == 100 );
assert( li.nth(200).get-or(100) == 100 );
assert( li.length == 6 );
li = li + ([3_u64, 2_u64] : List<U64>);
assert( li.length == 8 );
assert( li.nth(0).get-or(100) == 1 );
assert( li.nth(1).get-or(100) == 2 );
assert( li.nth(2).get-or(100) == 2 );
assert( li.nth(3).get-or(100) == 3 );
assert( li.nth(4).get-or(100) == 4 );
assert( li.nth(5).get-or(100) == 5 );
assert( li.nth(6).get-or(100) == 3 );
assert( li.nth(7).get-or(100) == 2 );
assert( li.nth(200).get-or(100) == 100 );
