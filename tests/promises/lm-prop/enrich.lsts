
import LM23COMMON/unit-prop-core.lsts;

add-quick-prop( t0(c"A.1"), ta, t0(c"A.2") );
add-weaken-quick-prop( t0(c"A.1"), ta, t0(c"A.2") );

assert( enrich-quick-prop(t0(c"A.1")) == (t0(c"A.1") && t0(c"A.2")) );
assert( weaken-quick-prop(t0(c"A.1") && t0(c"A.2")) == t0(c"A.1") );
assert( safe-alloc-block-count == 0 );

add-quick-prop( t0(c"B.1"), t0(c"B.2"), t0(c"B.3") );
add-weaken-quick-prop( t0(c"B.1"), t0(c"B.2"), t0(c"B.3") );

assert( enrich-quick-prop(t0(c"B.1")) == t0(c"B.1") );
assert( enrich-quick-prop(t0(c"B.1") && t0(c"B.2")) == (t0(c"B.1") && t0(c"B.2") && t0(c"B.3")) );
assert( weaken-quick-prop(t0(c"B.1") && t0(c"B.2") && t0(c"B.3")) == (t0(c"B.1") && t0(c"B.2")) );
assert( safe-alloc-block-count == 0 );

add-quick-prop( t1(c"C.1",t0(c"C.2")), ta, t0(c"C.3") );
add-weaken-quick-prop( t1(c"C.1",t0(c"C.2")), ta, t0(c"C.3") );

assert( enrich-quick-prop(t1(c"C.1",t0(c"C.2"))) == (t1(c"C.1",t0(c"C.2")) && t0(c"C.3")) );
assert( weaken-quick-prop(t1(c"C.1",t0(c"C.2")) && t0(c"C.3")) == t1(c"C.1",t0(c"C.2")) );
assert( safe-alloc-block-count == 0 );

add-quick-prop( t1(c"D.1",t0(c"D.2")), t0(c"D.3"), t0(c"D.4") );
add-weaken-quick-prop( t1(c"D.1",t0(c"D.2")), t0(c"D.3"), t0(c"D.4") );

assert( enrich-quick-prop(t1(c"D.1",t0(c"D.2"))) == t1(c"D.1",t0(c"D.2")) );
assert( enrich-quick-prop(t1(c"D.1",t0(c"D.2")) && t0(c"D.3")) == (t1(c"D.1",t0(c"D.2")) && t0(c"D.3") && t0(c"D.4")) );
assert( weaken-quick-prop(t1(c"D.1",t0(c"D.2")) && t0(c"D.3") && t0(c"D.4")) == (t1(c"D.1",t0(c"D.2")) && t0(c"D.3")) );
assert( safe-alloc-block-count == 0 );
