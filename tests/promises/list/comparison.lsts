
import lib2/core/bedrock.lsts;

assert( ([] : List<U8>) == ([] : List<U8>) );
assert( safe-alloc-block-count == 0 );

#assert( [1] == [1] );
#assert( [1] <= [1] );
#assert( [1] >= [1] );
#assert( [1] != [2] );
#assert( [1] < [2] );
#assert( [1] <= [2] );
#assert( [2] >= [1] );
#assert( [2] > [1] );
#assert( [1] < [1,2] );
#assert( safe-alloc-block-count == 0 );

let x = ["1"];
mark-as-released(x.retain); x.release;
#mark-as-released(x.retain); x.release;
#mark-as-released(x.retain); x.release;
#mark-as-released(x.retain); x.release;
#mark-as-released(x.retain); x.release;
#mark-as-released(x.retain); x.release;
#mark-as-released(x.retain); x.release;
#mark-as-released(x.retain); x.release;
#x.release;
#x.release;
#x.release;

#assert( ["1"] == ["1"] );
#assert( ["1"] <= ["1"] );
#assert( ["1"] >= ["1"] );
#assert( ["1"] != ["2"] );
#assert( ["1"] < ["2"] );
#assert( ["1"] <= ["2"] );
#assert( ["2"] >= ["1"] );
#assert( ["2"] > ["1"] );
#assert( ["1"] < ["1","2"] );
assert( safe-alloc-block-count == 0 );
