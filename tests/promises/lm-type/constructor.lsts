
import LM/unit-type-core.lsts;

assert( ta == ta );
assert( safe-alloc-block-count == 0 );

assert( t0("A") == t0("A") );
assert( t0("A") <= t0("A") );
assert( t0("A") >= t0("A") );
assert( not(t0("A") == t0("B")) );
assert( t0("A") != t0("B") );
assert( t0("A") < t0("B") );
assert( t0("A") <= t0("B") );
assert( not(t0("A") > t0("B")) );
assert( not(t0("A") >= t0("B")) );
assert( not(t0("B") == t0("A")) );
assert( t0("B") != t0("A") );
assert( not(t0("B") < t0("A")) );
assert( not(t0("B") <= t0("A")) );
assert( t0("B") > t0("A") );
assert( t0("B") >= t0("A") );
assert( safe-alloc-block-count == 0 );

assert( t1("A",t0("T")) == t1("A",t0("T")) );
assert( t1("A",t0("T")) < t1("B",t0("T")) );
assert( t1("T",t0("A")) < t1("T",t0("B")) );
assert( t1("T",t0("A")) < t2("T",t0("A"),t0("B")) );
assert( safe-alloc-block-count == 0 );

assert( tv("A") == tv("A") );
assert( tv("A") <= tv("A") );
assert( tv("A") >= tv("A") );
assert( not(tv("A") == tv("B")) );
assert( tv("A") != tv("B") );
assert( tv("A") < tv("B") );
assert( tv("A") <= tv("B") );
assert( not(tv("A") > tv("B")) );
assert( not(tv("A") >= tv("B")) );
assert( not(tv("B") == tv("A")) );
assert( tv("B") != tv("A") );
assert( not(tv("B") < tv("A")) );
assert( not(tv("B") <= tv("A")) );
assert( tv("B") > tv("A") );
assert( tv("B") >= tv("A") );
assert( safe-alloc-block-count == 0 );
