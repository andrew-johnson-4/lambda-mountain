
# .find-callable is the central hub for all function and constructor calls
let .find-callable(tctx: TypeContext?, fname: CString, arg-types: Type, blame: AST): TypeContextRow = (
   arg-types = denormalize-strong(arg-types);
   let match-set = mk-vector(type(TypeContextRow));
   for tr in tctx.lookups(fname) {
      if can-apply(tr.dt, arg-types) {
         match-set = match-set.push(tr);
      }
   };
   let result = None : TypeContextRow?;
   for tr1 in match-set { if not(non-zero(result)) {
      let all-accept = true;
      for tr2 in match-set {
         if is(tr1,tr2) then ()
         else if most-special(tr1.dt,tr2.dt)!=tr1.dt then all-accept = false;
      };
      if all-accept { result = Some(tr1) };
   }};
   if not(non-zero(result)) && match-set.length > 0 {
      eprint("Unable to find unambiguous callable: \{fname} \{arg-types}\nAt: \{blame.location}\n");
      for tr in match-set {
         eprint("\{tr.dt}\n");
      };
      exit(1);
   };
   if not(non-zero(result)) then {
      print("Unable to find appropriate callable: \{fname} \{arg-types}\nAt: \{blame.location}\n");
      for tr in tctx.lookups(fname) {
         print("Candidate: \{tr.dt}\n");
      };
      exit(1);
   };
   result.get-or-panic
);
