
let .with-phi(tctx: TypeContext?, tt: Type): Type = (
   if tt.is-t(c"Cons",2) {
      let ct = tt.slot(c"Cons",2);
      tt = t2(c"Cons", tctx.with-phi(ct.l1), tctx.with-phi(ct.l2));
   } else if tt.is-t(c"Phi::Id",1) {
      let nt = tt;
      if tt.is-t(c"Phi::State",1) then nt = tt.without-slot(c"Phi::State",1);
      let phi-state = tctx.lookup-phi(tt.slot(c"Phi::Id",1).l1.simple-tag).phi-tt;
      if non-zero(phi-state) then tt = nt && t1(c"Phi::State", phi-state);
   };
   tt
);

