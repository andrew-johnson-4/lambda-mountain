
type L suffix _l;

#let :Blob $":expression"(x: Any): L = ();
#let :Blob $":program"(x: Any): L = ();
#let :Blob $":frame"(x: Any): L = ();
#let :Blob $":case-number"(x: Any): L = ();
#let :Blob $":function-id"(x: Any): L = ();

#let :Blob $"=="(l: L, r: L): L = ();
#let :Blob $"!="(l: L, r: L): L = ();
#let :Blob $"<"(l: L, r: L): L = ();
#let :Blob $"<="(l: L, r: L): L = ();
#let :Blob $">"(l: L, r: L): L = ();
#let :Blob $">="(l: L, r: L): L = ();

#let :Blob $"*"(l: L, r: L): L = ();
#let :Blob $"/"(l: L, r: L): L = ();
#let :Blob $"%"(l: L, r: L): L = ();
#let :Blob $"+"(l: L, r: L): L = ();
#let :Blob $"-"(l: L, r: L): L = ();

#let :Blob range(hi: L): L = ();
#let :Blob range(lo: L, hi: L): L = ();

#let :Blob align(hi: L): L = ();
#let :Blob uuid(t: L): L = ();

#let :Blob remove-trailing-comma(t: L): L = ();

#let :Blob mangle(t: L): L = ();
#let :Blob mangle-pre(t: Type<Any>): L = ();
#let :Blob mangle-post(t: Type<Any>): L = ();
