
null := λ: Blob(). (: (
   (:expression NULL_l)
) Array<?,?>);

vararg-cons := λ: Blob(: es x...). (: (
   (:expression(
      '{_l (for-arg (e in es) (
         (:expression e) ',_l
       )) 'NULL}_l
   ))
) Array<x,CONST>);

const-cons := λ: Blob(: v x)(: i L). (: (
   (:expression(
      '{_l (for-atom (e in (range( 0_l i ))) (
          (:expression v) ',_l
       )) '}_l
   ))
) Array<x,CONST>);

#declare-binop( mov, raw-type(base[CONST+array-len]), raw-type(base[CONST+array-len]), raw-type(Nil), (
#   l"({memcpy(&"; y;
#   l","; x;
#   l"sizeof("; base_l; l")*"; x-len_l;
#   l");({});})";
#));
