
let .slot(tt: Type, sl: CString): Type = (
   match tt {
      TGround{ tag=tag } => (
         if tag==sl then tt else ta
      );
      TAnd{ conjugate=conjugate } => (
         let return = ta;
         for c in conjugate { if not(non-zero(return)) then return = c.slot(sl) };
         return
      );
      _ => ta;
   }
);

let .slot(tt: Type, sl: CString, si: U64): Type = (
   match tt {
      TGround{ tag=tag, parameters=parameters } => (
         if tag==sl && parameters.length==si then tt else ta
      );
      TAnd{ conjugate=conjugate } => (
         let return = ta;
         for c in conjugate { if not(non-zero(return)) then return = c.slot(sl,si) };
         return
      );
      _ => ta;
   }
);
