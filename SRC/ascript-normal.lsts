
let .ascript(tctx: TypeContext?, t: AST, tt: Type): Nil = (
   tt = tctx.with-phi(tt);
   if non-zero(tt) {
      tt = tctx.with-phi(tt);
      let prev-tt = typeof-term(t);
      if non-zero(prev-tt) {
         let norm-tt = tt.normalize.without-phi;
         if not(norm-tt.is-arrow) {
            if not(prev-tt <: norm-tt) {
               exit-error("Type Ascription Inequality\n\{typeof-term-normal(t)} does not imply \{norm-tt}", t);
            }
         }
      } else ascript-force(t, tt);
   }
);

let ascript-force(t: AST, tt: Type): Nil = (
   add-concrete-type-instance(tt, t);
   ascript-plain(t, tt);
   types-have-changed = true;
);
