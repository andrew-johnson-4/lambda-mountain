
let print(io: IO::File, tt: Type): Nil = (
   match tt {
      TAny{} => print(io, "?");
      TVar{name=name} => print(io, name);
      TAnd{conjugate=conjugate} => (
         let ongoing = false;
         for c in conjugate {
            if ongoing && c.is-arrow then print(io, " +\n")
            else if ongoing then print(io, " + ");
            print(io, c);
            ongoing = true;
         };
      );
      TGround{tag=tag, parameters:[]} => if tag[0] >= 97 && tag[0] <= 122 then print(io, "\"\{tag}\"") else print(io, tag);
      TGround{tag=tag, ps=parameters} => (
         print(io, tag); print(io, "<"); print(io, ps); print(io, ">");
      );
   }
);

let print(io: IO::File, ps: List<Type>): Nil = (
   let count = 0_u64;
   for p1 in ps.reverse {
      if count > 0 then print(io, ",");
      print(io, p1);
      count = count + 1;
   };
);
