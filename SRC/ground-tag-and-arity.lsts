
let .ground-tag-and-arity(tt: Type): (CString,U64) = (
   match tt {
      TGround { tag:c"Array", parameters:[_.. array-base..] } => (
         let ga = array-base.ground-tag-and-arity;
         ( ga.first, ga.second + 1000 )
      );
      TGround { tag:c"Sized" } => (c"", 9999999_u64);
      TGround { tag=tag, parameters=parameters } => (tag, parameters.length);
      TAny {} => (c"?", 0_u64);
      TVar {} => (c"", 9999999_u64);
      TAnd { conjugate=conjugate } => (
         let result = (c"", 9999999_u64);
         for c in conjugate { if result.second==9999999 then result = c.ground-tag-and-arity };
         result
      );
   }
);

let .simple-tag(tt: Type): CString = (
   match tt {
      TGround { tag=tag } => tag;
      _ => c"";
   }
);
