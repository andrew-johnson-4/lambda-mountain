
let phi-move-args(ftype: Type, args: Type, blame: AST): TypeContext? = (
   phi-move-args(Some(mk-tctx()), ftype.domain, args, blame);
);

let phi-move-args(tctx: TypeContext?, params: Type, args: Type, blame: AST): TypeContext? = (
   if params.is-t(c"Cons",2) {
      tctx = phi-move-args(tctx, params.slot(c"Cons",2).l1, args.slot(c"Cons",2).l1, blame);
      tctx = phi-move-args(tctx, params.slot(c"Cons",2).l2, args.slot(c"Cons",2).l2, blame);
   } else {
      if not(params.is-t(c"MustNotMove",0)) && args.is-t(c"Phi::State",1) {
         tctx = phi-move(tctx, args, blame);
      };
   };
   tctx
);
