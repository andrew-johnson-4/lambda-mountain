
# without-location is mainly used to scrub macro location information so that the preprocessor knows to overwrite them

let without-location(term: AST): AST = (
   match term {
      Var{key=key,token=token} => Var(key,without-location(token));
      Lit{key=key,token=token} => Lit(key,without-location(token));
      App{is-cons=is-cons,left=left,right=right} => App(is-cons,close(without-location(left)),close(without-location(right)));
      Seq{seq=seq} => (
         let ret = mk-vector(type(AST), seq.length);
         for s in seq { ret = ret.push(without-location(s)) };
         Seq(ret)
      );
      Abs{lhs=lhs,rhs=rhs,tt=tt} => Abs(close(without-location(lhs)),close(without-location(rhs)),tt);
      Glb{key=key,val=val} => Glb(key,close(without-location(val)));
      _ => term;
   }
);

let without-location(t: Token): Token = (
   Token( t.key, t.nonce, mk-location() )
);
