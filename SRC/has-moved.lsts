
let .has-moved(tctx: TypeContext?): U64 = (
   let moved = false;
   for TypeContextRow{dt=dt} in tctx.get-or(mk-tctx()).tctx {
      moved = moved || dt.has-moved;
   };
   moved
);

let .has-moved(tt: Type): U64 = (
   match tt {
      TAnd{conjugate=conjugate} => (
         let moved = false;
         for c in conjugate {
            moved = moved || c.has-moved;
         };
         moved
      );
      TGround{tag:c"Linear",parameters:[TGround{tag:c"Phi::Moved",parameters:[]}..]} => true;
      TGround{tag=tag,parameters=parameters} => (
         let moved = false;
         for c in parameters {
            moved = moved || c.has-moved;
         };
         moved
      );
      _ => false;
   }
);
